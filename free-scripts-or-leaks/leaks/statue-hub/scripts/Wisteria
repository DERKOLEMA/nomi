local civfarm
local slayerfarm
local demonfarm

local aa 
local target
game.RunService.Heartbeat:Connect(function()
for i, v in pairs(game.Workspace.Living:GetChildren()) do
if v:FindFirstChildOfClass("Humanoid") and v:FindFirstChildOfClass("Humanoid").Health ~= 0 and  v:FindFirstChild("HumanoidRootPart")  and game.Players.LocalPlayer.Character ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and v ~= game.Players.LocalPlayer.Character and  (game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position -  v.HumanoidRootPart.Position).Magnitude < 8 then
target = v
end

end
end)
spawn(function()
while wait(.1) do
if aa == true then
    local args = {
        [1] = {
            [1] = target
        },
        [2] = game:GetService("ReplicatedStorage").Styles.Fists.Vulnerable,
        [3] = 0,
        [4] = 0
    }
    
    game:GetService("ReplicatedStorage").Events.Execute:FireServer(unpack(args))
end

end

end)
spawn(function()
    while wait(.55) do 

    if aa == true and target ~= nil and target:FindFirstChild("Humanoid") and target:FindFirstChild("Humanoid").Health ~= 0 then
        local args = {
            [1] = {
                [1] = target
            },
            [2] = game:GetService("ReplicatedStorage").Styles.Fists:FindFirstChild("Auto Attacks"):FindFirstChild("1"),
            [3] = 0,
            [4] = 0,
            [5] = true
        }

        
        game:GetService("ReplicatedStorage").Events.Attack:FireServer(unpack(args))

        
    end

    end

end)
game.RunService.Heartbeat:Connect(function()
if civfarm == true then
if game:GetService("Workspace").Living:FindFirstChild("Civilian") and game:GetService("Workspace").Living:FindFirstChild("Civilian"):FindFirstChild("Humanoid") and game:GetService("Workspace").Living:FindFirstChild("Civilian"):FindFirstChild("Humanoid").Health ~= 0 and game:GetService("Workspace").Living:FindFirstChild("Civilian"):FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
    local args = {
        [1] = true
    }
    
    game:GetService("Players").LocalPlayer.Character.Scripts.Sheath:FireServer(unpack(args))
    
    
    
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Living:FindFirstChild("Civilian").HumanoidRootPart.CFrame + game:GetService("Workspace").Living:FindFirstChild("Civilian").HumanoidRootPart.CFrame.LookVector * -2
end
end
end)
game.RunService.Heartbeat:Connect(function()
    if slayerfarm == true then
    if game:GetService("Workspace").Living:FindFirstChild("Slayer") and game:GetService("Workspace").Living:FindFirstChild("Slayer"):FindFirstChild("Humanoid") and game:GetService("Workspace").Living:FindFirstChild("Slayer"):FindFirstChild("Humanoid").Health ~= 0 and game:GetService("Workspace").Living:FindFirstChild("Slayer"):FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local args = {
            [1] = true
        }
        
        game:GetService("Players").LocalPlayer.Character.Scripts.Sheath:FireServer(unpack(args))
        
        
        
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Living:FindFirstChild("Slayer").HumanoidRootPart.CFrame + game:GetService("Workspace").Living:FindFirstChild("Slayer").HumanoidRootPart.CFrame.LookVector * -2
    end
    end
    end)

    game.RunService.Heartbeat:Connect(function()
        if demonfarm == true then
        if game:GetService("Workspace").Living:FindFirstChild("Demon") and game:GetService("Workspace").Living:FindFirstChild("Demon"):FindFirstChild("Humanoid") and game:GetService("Workspace").Living:FindFirstChild("Demon"):FindFirstChild("Humanoid").Health ~= 0 and game:GetService("Workspace").Living:FindFirstChild("Demon"):FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local args = {
                [1] = true
            }
            
            game:GetService("Players").LocalPlayer.Character.Scripts.Sheath:FireServer(unpack(args))
            
            
            
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Living:FindFirstChild("Demon").HumanoidRootPart.CFrame + game:GetService("Workspace").Living:FindFirstChild("Demon").HumanoidRootPart.CFrame.LookVector * -2
        end
        end
        end)
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
local Window = Rayfield:CreateWindow({
	Name = "Statue Hub",
	LoadingTitle = "Statue Hub",
	LoadingSubtitle = "made by wowzers!#0560",
	ConfigurationSaving = {
		Enabled = false,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},
        Discord = {
        	Enabled = false,
        	Invite = "sirius", -- The Discord invite code, do not include discord.gg/
        	RememberJoins = true -- Set this to false to make them join the discord every time they load it up
        },
	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Sirius Hub",
		Subtitle = "Key System",
		Note = "Join the discord (discord.gg/sirius)",
		FileName = "SiriusKey",
		SaveKey = true,
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = "Hello"
	}
})
repeat wait() until  game:GetService("Players").LocalPlayer.Character:FindFirstChild("Scripts") and game:IsLoaded()
local Tab = Window:CreateTab("Farming", 4483362458) -- Title, Image
local Toggle = Tab:CreateToggle({
	Name = "Civillian Farm",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		civfarm = Value
	end,
})
local Toggle = Tab:CreateToggle({
	Name = "Demon Farm",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		demonfarm = Value
	end,
})
local Toggle = Tab:CreateToggle({
	Name = "Slayer Farm",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		slayerfarm = Value
	end,
})
local Toggle = Tab:CreateToggle({
	Name = "Auto Attack",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		aa = Value
	end,
})
