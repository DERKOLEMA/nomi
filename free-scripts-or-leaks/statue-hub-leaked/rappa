

 local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
 local Window = Rayfield:CreateWindow({
     Name = "Statue Hub",
     LoadingTitle = "Statue Hub",
     LoadingSubtitle = "Made by wowzers!#0560",
     ConfigurationSaving = {
         Enabled = false,
         FolderName = nil, -- Create a custom folder for your hub/game
         FileName = "A"
     },
         Discord = {
             Enabled = false,
             Invite = "sirius", -- The Discord invite code, do not include discord.gg/
             RememberJoins = true -- Set this to false to make them join the discord every time they load it up
         },
     KeySystem = false, -- Set this to true to use our key system
     KeySettings = {
         Title = "Sirius Hub",
         Subtitle = "Key System",
         Note = "Join the discord (discord.gg/sirius)",
         FileName = "SiriusKey",
         SaveKey = true,
         GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
         Key = "Hello"
     }
 })
 
 local Tab = Window:CreateTab("Farming", 4483362458) -- Title, Image
 local TYCOONNOTI = Tab:CreateLabel("Waiting For Tycoon...")
 repeat wait() for i, v in pairs(game:GetService("Workspace").Tycoons:GetChildren()) do
     if string.match(v.Name, "Tycoon") and v.TycoonOwner.Value == game.Players.LocalPlayer.Name then
     shared.Tycoon = v
     end
 end
 until shared.Tycoon ~= nil
     TYCOONNOTI:Set("Tycoon Found! Enjoy!")

for i, v in pairs(shared.Tycoon.StaticItems.CDCollect:GetChildren()) do
 if v:FindFirstChild("ProximityPrompt") then
 shared.Prox = v.ProximityPrompt
 end

end
local acd
coroutine.wrap(function()
    while wait() do
    if acd == true  then
        local args = {
            [1] = game:GetService("Players").LocalPlayer
        }
        
        game:GetService("ReplicatedStorage").Events.CDs:FireServer(unpack(args))        
    end
end
end)()
local autograb
local autosell

local Toggle = Tab:CreateToggle({
 Name = "Auto Sell",
 CurrentValue = false,
 Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
 Callback = function(Value)
     autosell = Value
 end,
})
local Toggle = Tab:CreateToggle({
    Name = "Auto CD",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        acd = Value
    end,
   })
local Toggle = Tab:CreateToggle({
 Name = "Auto Collect",
 CurrentValue = false,
 Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
 Callback = function(Value)
     autograb = Value
 end,
})
coroutine.wrap(function()
 while wait() do
if autosell == true then
for i, v in pairs(game:GetService("Workspace").NPCS:GetDescendants()) do
if v.Name == "ProximityPrompt" and game.Players.LocalPlayer.Character ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and v.Parent ~= nil and v.Parent:IsA("BasePart") then
    game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = v.Parent.CFrame
    task.wait(.1)
    fireproximityprompt(v)

end
end
end
end
end)()
coroutine.wrap(function()
 while wait(.5) do
if autograb == true and game.Players.LocalPlayer.Character ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")  then
 game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = shared.Prox.Parent.CFrame
task.wait(.1)
 fireproximityprompt(shared.Prox)
end
end

 end)()
