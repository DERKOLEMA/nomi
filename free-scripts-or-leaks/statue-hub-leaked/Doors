
	wait(.1)
	local gameid = game.PlaceId

	wait(2)
	local fesp = false
	local besp = false
	local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
	local venyx = library.new("Statue Hub | ty for all of the support on doors script", 5013109572)
	
	local autoopen = false
	
	local themes = {
		Background = Color3.fromRGB(24, 24, 24),
		Glow = Color3.fromRGB(0, 0, 0),
		Accent = Color3.fromRGB(10, 10, 10),
		LightContrast = Color3.fromRGB(20, 20, 20),
		DarkContrast = Color3.fromRGB(14, 14, 14),  
		TextColor = Color3.fromRGB(255, 255, 255)
	}
	

	
wait()
	local newroom = game:GetService("ReplicatedStorage").GameData.ChaseStart.Changed:Connect(function()
		local ChaseStart = game:GetService("ReplicatedStorage").GameData.ChaseStart.Value
	local room = game:GetService("ReplicatedStorage").GameData.LatestRoom.Value
	
	local diff = ChaseStart-room

	if diff > 0 then
	venyx:Notify("Event In Room", ChaseStart)
	end
	end)
	-- first page
	local page = venyx:addPage("Doors", 5012544693)

	local section = page:addSection("Main")
	section:addButton("Disable Anticheat lololol (dunno abt float check)", function()
	local a = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
	while wait() do
	a.Parent = nil
	a.Parent = game.Players.LocalPlayer.Character
	end
	end)
	local section1 = page:addSection("Misc")
	_G.RushSpawned = false
	section1:addButton("FullBright", function()
		game:GetService("Lighting").FogStart = 0
		game:GetService("Lighting").ExposureCompensation = 3
		game:GetService("Lighting").ClockTime = 12
		game:GetService("Lighting").Brightness = 1
		
		game:GetService("Lighting").GlobalShadows = false
		while wait(.01) do
			for i, v in pairs(game:GetService("Lighting"):GetDescendants()) do
				if v.Parent == "Lighting" then
					v:remove()
		end
			end
	end
	end)

	section1:addButton("Complete Elevator Power Puzzle", function()
		game:GetService("ReplicatedStorage").Bricks.EBF:FireServer()
	
	end)
wait()
	section1:addButton("Instant Interact", function()
		game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(interactprompt)

			fireproximityprompt(interactprompt, 1)
	
	end)
	end)
	
	section1:addButton("Auto Monster Notify", function()
		
		while wait(3) do
			if game:GetService("Workspace"):FindFirstChild("AmbushMoving") then
		 venyx:Notify("Monster Spawn Notifier", "Ambush Has Spawned, Hide Quickly!")
			end
		if game:GetService("Workspace"):FindFirstChild("RushMoving") then
	
				venyx:Notify("Monster Spawn Notifier", "Rush Has Spawned, Hide Quickly!")
		end
				   
		if game:GetService("Workspace"):FindFirstChild("LookMan") then
			venyx:Notify("Monster Spawn Notifier", "Ambush Has Spawned, Hide Quickly!")
			
		
	
	
	end
	end
	
	end)
	
	section1:addButton("Esp Key", function()
	while wait(.5) do
	
	--or "Lighter" or "LeverForGate" or "Flashlight" or "Battery"
	for i,v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
		if v.Name == "KeyObtain" or v.Name == "ElectricalKeyObtain" then
	 local esp = Instance.new("Highlight")
	 esp.Name = "Highlights"
	 esp.FillTransparency = 0
	 esp.FillColor = Color3.new(0, 0, 1)
	 esp.OutlineColor = Color3.new(1, 0.333333, 1)
	 esp.OutlineTransparency = 0.4
	 esp.Parent = v
	end
	end
	end
	end)
wait(.5)
		section1:addButton("Esp Books", function()


game:GetService("RunService").Heartbeat:Connect(function()
    for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
    if v.Name == "LiveHintBook" then
    local esp = Instance.new("Highlight")
    esp.Parent = v
    end
    
end
    end)
end)
	section1:addButton("Esp Figure", function()

	
	--or "Lighter" or "LeverForGate" or "Flashlight" or "Battery
	game:GetService("RunService").Heartbeat:Connect(function()
for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
    
if v.Name == "FigureRagdoll" then
local esp = Instance.new("Highlight")
esp.Parent = v

end

end
end)
	end)
	
	section1:addToggle("Play The Seek Soundtrack", nil, function(firemusic)
	
	game:GetService("Workspace")["Ambience_Seek"].Playing = firemusic
	end)

	
	
	section:addToggle("Auto Open Doors", nil, function(autoopentog)
	autoopen = autoopentog
	end)
	
	  section1:addSlider("Walkspeed", 1, 1, 100, function(value)
	
			game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
			
	end)

	section1:addKeybind("Tp Forward", Enum.KeyCode.T, function()
		local Players = game:GetService("Players")
		local player = Players.LocalPlayer
		local character = player.Character
		if character and character.Parent then
			local currentPivot = character:GetPivot()
			character:PivotTo(currentPivot * CFrame.new(0, 0, -15))
			end
		
	end, function()
	
	end)
	section1:addKeybind("Noclip", Enum.KeyCode.N, function()
game:GetService("Players").LocalPlayer.Character.Collision.CanCollide = not game:GetService("Players").LocalPlayer.Character.Collision.CanCollide

		
	end, function()
	
	end)
	section1:addKeybind("Tp Upward", Enum.KeyCode.Z, function()
		local Players = game:GetService("Players")
		local player = Players.LocalPlayer
		local character = player.Character
		if character and character.Parent then
			local currentPivot = character:GetPivot()
			character:PivotTo(currentPivot * CFrame.new(0, 15, 0))
			end
		
	end, function()
	
	end)
	
	section1:addButton("Larger FOV", function()
	game:GetService("RunService").Heartbeat:Connect(function()
			game:GetService("Workspace").Camera.FieldOfView = 120
			end)
	end)
	section:addButton("Remove Lever Doors", function()
		
	for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do if v.Name == "ThingToOpen" then
		v:remove()
	end
	end
	end)
	section:addButton("No Screech", function()
	game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener.Modules.Screech:remove()
	end)
	section:addButton("No Shade", function()
	game:GetService("ReplicatedStorage").ClientModules.EntityModules.Shade:remove()
	end)
	section:addButton("No Glitch", function()
	game:GetService("ReplicatedStorage").ClientModules.EntityModules.Glitch:remove()
	end)
	section:addButton("Remove Room 50 Door", function()
		game:GetService("Workspace").CurrentRooms:FindFirstChild("50").Door.Door:remove()
	end)
	section1:addButton("Remove Jumpscare Noises", function()
		game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener["Jumpscare_Ambush"]:remove()
	game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener["Jumpscare_Ambush2"]:remove()
	game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener.Modules.Screech:FindFirstChild("Attack"):remove()
	game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener.Modules.Screech:FindFirstChild("Caught"):remove()
	game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener["Jumpscare_Rush"]:remove()
	game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener["Jumpscare_Rush2"]:remove()
	game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener.Kill:remove()
	game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener["Jumpscare_Seek"]:remove()
	game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener.Modules.HideMonster.Scare:remove()
	game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener.Modules.AchievementUnlock.Scare:remove()
	game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator["Main_Game"].RemoteListener.Modules.SpiderJumpscare.Scare:remove()
	end)
	section1:addSlider("Knob Spoofer", 0, 1, 922337203685477580, function(value)
		local args = {
			[1] = value
			
		}
		game:GetService("ReplicatedStorage").ReplicaDataModule.KnobsUpdated:Fire(unpack(args))
	end)
		section1:addSlider("Revive Spoofer", 0, 1, 922337203685477580, function(value)
			local args = {
				[1] = value
				
			}
			game:GetService("ReplicatedStorage").ReplicaDataModule.RevivesUpdated:Fire(unpack(args))
		end)
	section1:addKeybind("Hide/Show GUI", Enum.KeyCode.LeftAlt, function()
	
		venyx:toggle()
	end, function()
	
	end)
	
	-- second page
	local theme = venyx:addPage("Theme", 5012544693)
	local colors = theme:addSection("Colors")
	
	for theme, color in pairs(themes) do -- all in one theme changer, i know, im cool
		colors:addColorPicker(theme, color, function(color3)
			venyx:setTheme(theme, color3)
		end)
	end
	-- load
	while wait(2) do
		if antirush == true then
		
	if _G.RushSpawned == true then
		local Players = game:GetService("Players")
		local player = Players.LocalPlayer
		local character = player.Character
		if character and character.Parent then
			local currentPivot = character:GetPivot()
			character:PivotTo(currentPivot * CFrame.new(0, 20, 0))
			
		repeat wait() until
		_G.RushSpawned == false
			local Players = game:GetService("Players")
		local player = Players.LocalPlayer
		local character = player.Character
		if character and character.Parent then
			local currentPivot = character:GetPivot()
			character:PivotTo(currentPivot * CFrame.new(0, -20, 0))
		end
		end
	end
	end
	end
	while wait(2) do
	if game:GetService("Workspace"):FindFirstChild("RushMoving") then
		_G.RushSpawned = true
	end
	end
	while wait(2) do
	if not game:GetService("Workspace"):FindFirstChild("RushMoving") then
		_G.RushSpawned = false
	end
	end


game:GetService("RunService").Heartbeat:Connect(function()
for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
    
if fesp == true and v.Name == "FigureRagdoll" then
local esp = Instance.new("Highlight")
esp.Parent = v

end

end
end)
	venyx:SelectPage(venyx.pages[1], true)
	
		
	
	while wait() do
		if autoopen == true then
		for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
		if v.Name == "ClientOpen" then
			v:FireServer()
			wait(.5)
			for i, v in pairs(game:GetService("Workspace").CurrentRooms:GetDescendants()) do
		if v.Name == "PrismaticConstraint" then
			v.TargetPosition = 10
		end
		end
		
	end
	end
	end
	end
