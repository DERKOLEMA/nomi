if game.PlaceId == 10347946161 then
	
	local autosell = false
		local AutoBuy = false
		game:GetService("RunService").Heartbeat:Connect(function()
			if autosell == true then
			game:GetService("ReplicatedStorage").Knit.Services.TycoonService.RE.SellRats:FireServer()
			end
			end)
	
			wait(1)
			-- init
			local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
			local venyx = library.new("Statue Hub", 5013109572)
			local AutoCollect = false
			local nftsniper = false
			local excfq = 2
			-- themes
			local themes = {
				Background = Color3.fromRGB(24, 24, 24),
				Glow = Color3.fromRGB(0, 0, 0),
				Accent = Color3.fromRGB(10, 10, 10),
				LightContrast = Color3.fromRGB(20, 20, 20),
				DarkContrast = Color3.fromRGB(14, 14, 14),  
				TextColor = Color3.fromRGB(255, 255, 255)
			}
	
		local lp = game:GetService("Players").LocalPlayer
	
		game:GetService("RunService").Heartbeat:Connect(function()
	if AutoBuy == true then
		if game:GetService("CoreGui"):FindFirstChild("PurchasePrompt") then
			game:GetService("CoreGui").PurchasePrompt:remove()
			end
		local head = game:GetService("Players").LocalPlayer.Character.Head
		for i, v in pairs(game:GetService("Workspace").Tycoons:GetDescendants()) do if v.Name == "Hitbox" then
			firetouchinterest(v, head, 0)
			firetouchinterest(v, head, 1)
		end
		end
	end
	
	end)
		game:GetService("RunService").Heartbeat:Connect(function()
			if AutoCollect == true then
			for i, v in pairs(game:GetService("Workspace").Tycoons:GetDescendants()) do
			  if v.Parent.Name == "Rats" and v.ClassName == "Model" then 
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.Part.Position)
			  end
	
	
				end
			end
			end)
			-- first page
			local page = venyx:addPage("Rat Washing Tycoon", 5012544693)
	
			local section1 = page:addSection("Automation")
					local section2 = page:addSection("Misc")
	
			section1:addToggle("Auto Sell", nil, function(astog)
	autosell = astog
			end)
	
			section1:addToggle("Auto Collect", nil, function(actog)
				AutoCollect = actog
			end)
			section1:addToggle("Auto Buy", nil, function(abtog)
				AutoBuy = abtog
			end)
			section1:addSlider("WalkSpeed", 0, 1, 200, function(value)
	if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.Humanoid then
	game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
	end
	end)
	
	
	
			section2:addKeybind("Hide/Show GUI", Enum.KeyCode.LeftAlt, function()
	
			venyx:toggle()
		end, function()
	
		end)
			-- second page
			local theme = venyx:addPage("Theme", 5012544693)
			local colors = theme:addSection("Colors")
	
			for theme, color in pairs(themes) do -- all in one theme changer, i know, im cool
				colors:addColorPicker(theme, color, function(color3)
					venyx:setTheme(theme, color3)
				end)
			end
	
			-- load
			venyx:SelectPage(venyx.pages[1], true)
		end
		wait(1)

	
	if game.PlaceId == 9328724748 then
		wait(1)
			-- init
			local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
			local venyx = library.new("Statue Hub", 5013109572)
			local autoclick = false
			local nftsniper = false
			local excfq = 2
			-- themes
			local themes = {
				Background = Color3.fromRGB(24, 24, 24),
				Glow = Color3.fromRGB(0, 0, 0),
				Accent = Color3.fromRGB(10, 10, 10),
				LightContrast = Color3.fromRGB(20, 20, 20),
				DarkContrast = Color3.fromRGB(14, 14, 14),  
				TextColor = Color3.fromRGB(255, 255, 255)
			}
			
		local lp = game:GetService("Players").LocalPlayer
	game:GetService("RunService").Heartbeat:Connect(function()
		wait(4)
	if autoexchange == true then
	wait(excfq)
		game:GetService("ReplicatedStorage").Packages.Knit.Services.ExchangeService.RF.ProcessExchange:InvokeServer()
	end
	end)
	
	game:GetService("RunService").Heartbeat:Connect(function()
		wait(.4)
		if autoclick ==  true then
		game:GetService("ReplicatedStorage").Packages.Knit.Services.ClickerService.RF.DoClick:InvokeServer()
	end
	end)
	
			-- first page
			local page = venyx:addPage("Crypto Tycoon", 5012544693)
			
			local section1 = page:addSection("Automation")
					local section2 = page:addSection("Misc")
	
			section1:addToggle("Auto Exchange", nil, function(aetog)
	autoexchange = aetog
			end)
		
			section1:addToggle("Auto Click", nil, function(aftog)
				autoclick = aftog
			end)
			section1:addToggle("NFT Sniper (Horribly Optimized btw)", nil, function(nftog)
				nftsniper = nftog
			end)
			section1:addSlider("WalkSpeed", 0, 1, 200, function(value)
	if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.Humanoid then
	game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
	end
	end)
		
		
		
			section2:addKeybind("Hide/Show GUI", Enum.KeyCode.LeftAlt, function()
		
			venyx:toggle()
		end, function()
		
		end)
			-- second page
			local theme = venyx:addPage("Theme", 5012544693)
			local colors = theme:addSection("Colors")
			
			for theme, color in pairs(themes) do -- all in one theme changer, i know, im cool
				colors:addColorPicker(theme, color, function(color3)
					venyx:setTheme(theme, color3)
				end)
			end
			game:GetService("RunService").Heartbeat:Connect(function()
			 
		if nftsniper == true and wait(5) then
			wait(1)
	local args = { [1] = "portrait_id_1" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_2" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_3" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_4" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_5" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_6" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_7" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	wait(1)
	local args = { [1] = "portrait_id_8" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_9" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_10" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_11" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_12" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_13" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	wait(1)
	local args = { [1] = "portrait_id_14" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_15" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_16" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	wait(1)
	local args = { [1] = "portrait_id_17" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_18" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_22" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	local args = { [1] = "portrait_id_23" } game:GetService("ReplicatedStorage").Packages.Knit.Services.AuctionService.RF.PurchasePortrait:InvokeServer(unpack(args))
	wait(1)
	end
	end)
			-- load
			venyx:SelectPage(venyx.pages[1], true)
		end
	
